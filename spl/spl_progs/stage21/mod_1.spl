alias func R1;
alias pid R2;

if(func == FREE_USER_AREA_PAGE)then

alias upa R3;
upa = [PROCESS_TABLE + (pid * 16) + 11];
multipush(R1, R2, R3);
R1 = RELEASE_PAGE;
R2 = upa;
call MOD_2;
multipop(R1, R2, R3);

return;
endif;



if(func == EXIT_PROCESS)then

if([PROCESS_TABLE + (pid*16) + 9] != 9)then
	alias count R3;
	count = 0;
	while(count < 16)do
		alias prTable R4;
		prTable = PROCESS_TABLE + (count * 16);
		if([prTable + 4] == WAIT_PROCESS && [prTable + 5] == pid)then
			[prTable + 4] = READY;
		endif;
		if([prTable + 2] == pid)then
			[prTable + 2] = -1;
		endif;
		count = count + 1;
	endwhile;
endif;

multipush(R1, R2);
R1 = FREE_PAGE_TABLE;
R2 = pid;
call MOD_1;
multipop(R1, R2);

multipush(R1, R2);
R1 = FREE_USER_AREA_PAGE;
R2 = pid;
call MOD_1;
multipop(R1, R2);

[PROCESS_TABLE + (pid * 16) + 4] = TERMINATED;

return;
endif;


if(func == FREE_PAGE_TABLE)then

alias pt R3;
pt = [PROCESS_TABLE + (pid * 16) + 14];
[pt + 0] = -1;
[pt + 1] = "0000";
[pt + 2] = -1;
[pt + 3] = "0000";

alias diskMapEntry R4;
diskMapEntry = DISK_MAP_TABLE + (pid * 16);

if([diskMapEntry + 2] != -1)then
	multipush(R1, R2, R3, R4);
	R1 = RELEASE_BLOCK;
	R2 = [diskMapEntry + 2];
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_2;
	multipop(R1, R2, R3, R4);
endif;


if([diskMapEntry + 3] != -1)then
	multipush(R1, R2, R3, R4);
	R1 = RELEASE_BLOCK;
	R2 = [diskMapEntry + 3];
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_2;
	multipop(R1, R2, R3, R4);
endif;
if([diskMapEntry + 8] != -1)then
	multipush(R1, R2, R3, R4);
	R1 = RELEASE_BLOCK;
	R2 = [diskMapEntry + 8];
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_2;
	multipop(R1, R2, R3, R4);
endif;

if([diskMapEntry + 9] != -1)then
	multipush(R1, R2, R3, R4);
	R1 = RELEASE_BLOCK;
	R2 = [diskMapEntry + 9];
	R3 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_2;
	multipop(R1, R2, R3, R4);
endif;

R4 = 2;
while(R4 < 10)do
	[DISK_MAP_TABLE + (pid * 10) + R4] = -1;
	R4 = R4 + 1;
endwhile;

alias iter R4;
iter = 2;
while(iter < 10)do
	if([pt + (iter * 2)] != -1)then
		multipush(R1, R2, R3, R4);
		R1 = RELEASE_PAGE;
		R2 = [pt + (iter * 2)];
		call MOD_2;
		multipop(R1, R2, R3, R4);
	endif;
	[pt + (iter * 2)] = -1;
	[pt + (iter * 2) + 1] = "0000";
	iter = iter + 1;
endwhile;
return;
endif;

if(func == GET_PCB_ENTRY)then
	alias iter R4;
	alias temp R5;
	iter = 0;
	R0 = -1;
	while(iter < 16)do
		temp = PROCESS_TABLE + (iter * 16);
		if([temp + 4] == TERMINATED)then
			[temp + 4] = ALLOCATED;
			[temp + 1] = iter;
			[temp + 14] = PAGE_TABLE_BASE + (iter * 20);
			[temp + 15] = 10;
			R0 = iter;
			break;
		endif;
		iter = iter + 1;
	endwhile;
return;
endif;

